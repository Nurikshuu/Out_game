import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px
import os

st.set_page_config(
    page_title="üìä Model Dashboard",
    page_icon="üìä",
    layout="wide"
)

def load_data():
    """–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞"""
    # –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä
    games_df = pd.read_csv('data/games_processed.csv') if os.path.exists('data/games_processed.csv') else None
    
    # –õ–æ–≥–∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π
    logs_df = pd.read_csv('logs/logs.csv') if os.path.exists('logs/logs.csv') else None
    
    return games_df, logs_df

def main():
    st.title("üìä Game Rating Classifier Dashboard")
    
    games_df, logs_df = load_data()
    
    if games_df is None:
        st.error("–î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –¥–∞—Ç–∞—Å–µ—Ç.")
        return
    
    # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    st.subheader("üéÆ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–∞—Ç–∞—Å–µ—Ç–∞")
    
    col1, col2, col3, col4 = st.columns(4)
    
    with col1:
        st.metric("–í—Å–µ–≥–æ –∏–≥—Ä", len(games_df))
    
    with col2:
        avg_text_length = games_df['combined_text'].str.len().mean()
        st.metric("–°—Ä–µ–¥–Ω—è—è –¥–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞", f"{avg_text_length:.0f}")
    
    with col3:
        unique_ratings = games_df['overall_player_rating'].nunique()
        st.metric("–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ä–µ–π—Ç–∏–Ω–≥–æ–≤", unique_ratings)
    
    with col4:
        if logs_df is not None:
            st.metric("–í—Å–µ–≥–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π", len(logs_df))
        else:
            st.metric("–í—Å–µ–≥–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π", 0)
    
    # –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤ –≤ –¥–∞—Ç–∞—Å–µ—Ç–µ
    st.subheader("üìà –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤ –≤ –¥–∞—Ç–∞—Å–µ—Ç–µ")
    
    col5, col6 = st.columns(2)
    
    with col5:
        rating_counts = games_df['overall_player_rating'].value_counts()
        fig_pie = px.pie(values=rating_counts.values, names=rating_counts.index,
                        title="–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤")
        st.plotly_chart(fig_pie, use_container_width=True)
    
    with col6:
        fig_bar = px.bar(x=rating_counts.index, y=rating_counts.values,
                        title="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä –ø–æ —Ä–µ–π—Ç–∏–Ω–≥–∞–º")
        st.plotly_chart(fig_bar, use_container_width=True)
    
    # –ê–Ω–∞–ª–∏–∑ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π
    if logs_df is not None and len(logs_df) > 0:
        st.subheader("üîÆ –ê–Ω–∞–ª–∏–∑ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π –º–æ–¥–µ–ª–∏")
        
        col7, col8 = st.columns(2)
        
        with col7:
            # –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–Ω—ã—Ö —Ä–µ–π—Ç–∏–Ω–≥–æ–≤
            pred_counts = logs_df['predicted_rating'].value_counts()
            fig_pred = px.bar(x=pred_counts.index, y=pred_counts.values,
                            title="–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–Ω—ã–µ —Ä–µ–π—Ç–∏–Ω–≥–∏")
            st.plotly_chart(fig_pred, use_container_width=True)
        
        with col8:
            # –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –º–æ–¥–µ–ª–∏
            fig_conf = px.histogram(logs_df, x='confidence', nbins=20,
                                  title="–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –º–æ–¥–µ–ª–∏")
            st.plotly_chart(fig_conf, use_container_width=True)
        
        # –¢–∞–±–ª–∏—Ü–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π
        st.subheader("üïí –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è")
        recent_predictions = logs_df.tail(10)
        st.dataframe(recent_predictions, use_container_width=True)
    
    # –ü—Ä–∏–º–µ—Ä—ã –∏–≥—Ä –ø–æ —Ä–µ–π—Ç–∏–Ω–≥–∞–º
    st.subheader("üéØ –ü—Ä–∏–º–µ—Ä—ã –∏–≥—Ä –ø–æ —Ä–µ–π—Ç–∏–Ω–≥–∞–º")
    
    for rating in games_df['overall_player_rating'].unique():
        with st.expander(f"–ü—Ä–∏–º–µ—Ä—ã –∏–≥—Ä —Å —Ä–µ–π—Ç–∏–Ω–≥–æ–º: {rating}"):
            rating_games = games_df[games_df['overall_player_rating'] == rating].head(3)
            for _, game in rating_games.iterrows():
                st.write(f"**{game['name']}**")
                st.write(f"–û–ø–∏—Å–∞–Ω–∏–µ: {game['combined_text'][:200]}...")
                st.write("---")

if __name__ == "__main__":
    main()